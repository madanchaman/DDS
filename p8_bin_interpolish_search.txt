// C program to implement interpolation search with recursion
#include <stdio.h>

// If x is present in arr[0..n-1], then returns index of it, else returns -1.
int interpolationSearch(int arr[], int lo, int hi, int x)
{
	int pos;
	// Since array is sorted, an element present in array must be in range defined by corner
	if (lo <= hi && x >= arr[lo] && x <= arr[hi]) {
		// Probing the position with keeping uniform distribution in mind.
		pos = lo + (((double)(hi - lo) / (arr[hi] - arr[lo])) * (x - arr[lo]));

		// Condition of target found
		if (arr[pos] == x)
			return pos;

		// If x is larger, x is in right sub array
		if (arr[pos] < x)
			return interpolationSearch(arr, pos + 1, hi, x);

		// If x is smaller, x is in left sub array
		if (arr[pos] > x)
			return interpolationSearch(arr, lo, pos - 1, x);
	}
	return -1;
}



// Driver Code
int main()
{
	// Array of items on which search will be conducted.
	int arr[] = {10, 12, 13, 16, 18, 19, 20, 21,22, 23, 24, 33, 35, 42, 47 };
	int n = sizeof(arr) / sizeof(arr[0]);

	int x = 18; // Element to be searched
	int index = interpolationSearch(arr, 0, n - 1, x);

	// If element was found
	if (index != -1)
		printf("Element found at index %d", index);
	else
		printf("Element not found.");
	return 0;
}

_________________________________________________________________________________________________

// C program to implement iterative Binary Search
#include <stdio.h>

// An iterative binary search function.
int binarySearch(int arr[], int l, int r, int x)
{
	while (l <= r) {
		int m = l + (r - l) / 2;

		// Check if x is present at mid
		if (arr[m] == x)
			return m;

		// If x greater, ignore left half
		if (arr[m] < x)
			l = m + 1;

		// If x is smaller, ignore right half
		else
			r = m - 1;
	}

	// If we reach here, then element was not present
	return -1;
}

// Driver code
int main(void)
{
	int arr[] = { 2, 3, 4, 10, 40 };
	int n = sizeof(arr) / sizeof(arr[0]);
	int x = 10;
	int result = binarySearch(arr, 0, n - 1, x);
	//if condition
	(result == -1) ? printf("Element is not present in array"): printf("Element is present at index %d",result);
	return 0;
	/*if (result == -1)
		printf("Element is not present in array")
	else
		printf("Element is present at index %d",result);*/
}
